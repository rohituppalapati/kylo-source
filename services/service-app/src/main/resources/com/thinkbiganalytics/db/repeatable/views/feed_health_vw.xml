<!--
  #%L
  kylo-service-app
  %%
  Copyright (C) 2017 ThinkBig Analytics
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

  <changeSet id="6" author="ru186002" runOnChange="true">
    <createView replaceIfExists="true" viewName="FEED_HEALTH_VW">
      <![CDATA[

    SELECT
    summary.FEED_ID AS FEED_ID,
    summary.FEED_NAME AS FEED_NAME,
    f.IS_STREAM AS IS_STREAM,
    e.JOB_EXECUTION_ID AS JOB_EXECUTION_ID,
    i.JOB_INSTANCE_ID AS JOB_INSTANCE_ID,
    e.START_TIME AS START_TIME,
    e.END_TIME AS END_TIME,
    CASE WHEN f.IS_STREAM = 'Y' AND feedStats.RUNNING_FEED_FLOWS IS NOT NULL
          THEN CASE WHEN feedStats.RUNNING_FEED_FLOWS > 0 THEN 'STARTING'
                    ELSE 'STOPPED'
                END
          ELSE e.STATUS
    END AS STATUS,
    CASE WHEN f.IS_STREAM = 'Y' AND feedStats.RUNNING_FEED_FLOWS IS NOT NULL
          THEN CASE WHEN feedStats.RUNNING_FEED_FLOWS > 0 THEN 'EXECUTING'
                    ELSE 'COMPLETED'
                END
          ELSE e.EXIT_CODE
    END AS EXIT_CODE,
    e.EXIT_MESSAGE AS EXIT_MESSAGE,
    summary.FAILED_COUNT AS FAILED_COUNT,
    summary.COMPLETED_COUNT AS COMPLETED_COUNT,
    summary.ABANDONED_COUNT AS ABANDONED_COUNT,
    summary.ALL_COUNT AS ALL_COUNT,
    feedStats.RUNNING_FEED_FLOWS AS RUNNING_COUNT
    FROM BATCH_JOB_EXECUTION e
    JOIN BATCH_JOB_INSTANCE i ON i.JOB_INSTANCE_ID = e.JOB_INSTANCE_ID
    INNER JOIN FEED f on f.ID = i.FEED_ID
    JOIN BATCH_FEED_SUMMARY_COUNTS_VW summary ON summary.FEED_ID = i.FEED_ID
    JOIN LATEST_FEED_JOB_VW maxJobs ON (maxJobs.FEED_ID = summary.FEED_ID
    AND maxJobs.JOB_EXECUTION_ID = e.JOB_EXECUTION_ID)
    INNER JOIN NIFI_FEED_STATS feedStats ON feedStats.FEED_ID = i.FEED_ID

      ]]>
    </createView>
  </changeSet>

</databaseChangeLog>
